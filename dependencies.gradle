allprojects {
    repositories {
        jcenter()
    }
}

ext {
    androidMinSdkVersion = 21
    androidTargetSdkVersion = 28
    androidCompileSdkVersion = 28

    //Libraries
    kotlinVersion = '1.2.71'
    rxKotlinVersion = '2.2.0'
    rxAndroidVersion = '2.1.0'
    gsonVersion = '2.8.5'
    okHttpVersion = '3.11.0'
    androidAnnotationsVersion = '21.0.3'
    retrofitVersion = '2.4.0'
    roomVersion = '2.0.0'
    androidXVersion = '1.0.0'
    timberVersion = '4.5.1'
    glideVersion = '4.0.0'
    koinVersion = '1.0.1'
    glassfishAnnotationVersion = '10.0-b28'
    constraintLayoutVersion = '2.0.0-alpha2'
    ankoVersion = '0.10.6'
    rxBindingVersion = '2.2.0'
    flipperVersion = '0.9.0'
    leakcanaryVersion = '1.6.2'
    arrowVersion = '0.7.3'
    moshiVersion = '1.7.0'

    //Testing
    robolectricVersion = '3.4.2'
    jUnitVersion = '4.12'
    assertJVersion = '3.8.0'
    espressoVersion = '3.1.0-beta01'
    mockitoKotlinVersion = '1.6.0'
    mockitoAndroidVersion = '2.21.0'
    runnerVersion = '1.1.0-beta01'

    dataDependencies = [
            rxKotlin:            "io.reactivex.rxjava2:rxkotlin:${rxKotlinVersion}",
            kotlin:              "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${kotlinVersion}",
            arrowCore:           "io.arrow-kt:arrow-core:$arrowVersion",
            arrowSyntax:         "io.arrow-kt:arrow-syntax:$arrowVersion",
            arrowTypeClasses:    "io.arrow-kt:arrow-typeclasses:$arrowVersion",
            arrowData:           "io.arrow-kt:arrow-data:$arrowVersion",
            arrowInstancesCore:  "io.arrow-kt:arrow-instances-core:$arrowVersion",
            arrowInstancesData:  "io.arrow-kt:arrow-instances-data:$arrowVersion",
            arrowProcessor:      "io.arrow-kt:arrow-annotations-processor:$arrowVersion"
    ]

    dataTestDependencies = [
            junit:               "junit:junit:${jUnitVersion}",
            kotlinJUnit:         "org.jetbrains.kotlin:kotlin-test-junit:${kotlin_version}",
            assertj:             "org.assertj:assertj-core:${assertJVersion}",
            mockito:             "com.nhaarman:mockito-kotlin:${mockitoKotlinVersion}"
    ]

    cacheDependencies = [
            gson:                "com.google.code.gson:gson:${gsonVersion}",
            rxKotlin:            "io.reactivex.rxjava2:rxkotlin:${rxKotlinVersion}",
            kotlin:              "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${kotlinVersion}",
            roomRuntime:         "androidx.room:room-runtime:${roomVersion}",
            roomCompiler:        "androidx.room:room-compiler:${roomVersion}",
            archExtensions:      "androidx.lifecycle:lifecycle-extensions:${roomVersion}",
            arrowCore:           "io.arrow-kt:arrow-core:$arrowVersion",
            arrowSyntax:         "io.arrow-kt:arrow-syntax:$arrowVersion",
            arrowTypeClasses:    "io.arrow-kt:arrow-typeclasses:$arrowVersion",
            arrowData:           "io.arrow-kt:arrow-data:$arrowVersion",
            arrowInstancesCore:  "io.arrow-kt:arrow-instances-core:$arrowVersion",
            arrowInstancesData:  "io.arrow-kt:arrow-instances-data:$arrowVersion",
            rxAndroid:           "io.reactivex.rxjava2:rxandroid:${rxAndroidVersion}",
            arrowProcessor:      "io.arrow-kt:arrow-annotations-processor:$arrowVersion"
    ]

    cacheTestDependencies = [
            junit:               "junit:junit:${jUnitVersion}",
            kotlinJUnit:         "org.jetbrains.kotlin:kotlin-test-junit:${kotlin_version}",
            assertj:             "org.assertj:assertj-core:${assertJVersion}",
            mockito:             "com.nhaarman:mockito-kotlin:${mockitoKotlinVersion}",
            robolectric:         "org.robolectric:robolectric:${robolectricVersion}",
            roomTesting:         "androidx.room:room-testing:${roomVersion}",
            archTesting:         "androidx.arch.core:core-testing:${roomVersion}"
    ]

    remoteDependencies = [
            gson:                "com.google.code.gson:gson:${gsonVersion}",
            rxKotlin:            "io.reactivex.rxjava2:rxkotlin:${rxKotlinVersion}",
            kotlin:              "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${kotlinVersion}",
            okHttp:              "com.squareup.okhttp3:okhttp:${okHttpVersion}",
            okHttpLogger:        "com.squareup.okhttp3:logging-interceptor:${okHttpVersion}",
            retrofit:            "com.squareup.retrofit2:retrofit:${retrofitVersion}",
            retrofitGsonConverter:"com.squareup.retrofit2:converter-gson:${retrofitVersion}",
            retrofitAdapter:     "com.squareup.retrofit2:adapter-rxjava2:${retrofitVersion}",
            moshi:               "com.squareup.moshi:moshi:$moshiVersion",
            moshiConverter:      "com.squareup.retrofit2:converter-moshi:$retrofitVersion",
            arrowCore:           "io.arrow-kt:arrow-core:$arrowVersion",
            arrowSyntax:         "io.arrow-kt:arrow-syntax:$arrowVersion",
            arrowTypeClasses:    "io.arrow-kt:arrow-typeclasses:$arrowVersion",
            arrowData:           "io.arrow-kt:arrow-data:$arrowVersion",
            arrowInstancesCore:  "io.arrow-kt:arrow-instances-core:$arrowVersion",
            arrowInstancesData:  "io.arrow-kt:arrow-instances-data:$arrowVersion",
            arrowProcessor:      "io.arrow-kt:arrow-annotations-processor:$arrowVersion"
    ]

    remoteTestDependencies = [
            junit:               "junit:junit:${jUnitVersion}",
            kotlinJUnit:         "org.jetbrains.kotlin:kotlin-test-junit:${kotlin_version}",
            assertj:             "org.assertj:assertj-core:${assertJVersion}",
            mockito:             "com.nhaarman:mockito-kotlin:${mockitoKotlinVersion}"
    ]

    mobileUiDependencies = [
            koin:                "org.koin:koin-android:${koinVersion}",
            koinScope:           "org.koin:koin-androidx-scope:${koinVersion}",
            koinArch:            "org.koin:koin-androidx-viewmodel:${koinVersion}",
            rxKotlin:            "io.reactivex.rxjava2:rxkotlin:${rxKotlinVersion}",
            rxAndroid:           "io.reactivex.rxjava2:rxandroid:${rxAndroidVersion}",
            glide:               "com.github.bumptech.glide:glide:${glideVersion}",
            kotlin:              "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${kotlinVersion}",
            androidAnnotations:  "androidx.annotation:annotation:${androidXVersion}",
            appCompat:           "androidx.appcompat:appcompat:${androidXVersion}",
            recyclerView:        "androidx.recyclerview:recyclerview:${androidXVersion}",
            constraintLayout:    "androidx.constraintlayout:constraintlayout:${constraintLayoutVersion}",
            material:            "com.google.android.material:material:${androidXVersion}",
            timber:              "com.jakewharton.timber:timber:${timberVersion}",
            glassfishAnnotation: "org.glassfish:javax.annotation:${glassfishAnnotationVersion}",
            roomRuntime:         "androidx.room:room-runtime:${roomVersion}",
            roomCompiler:        "androidx.room:room-compiler:${roomVersion}",
            roomRxJava:          "androidx.room:room-rxjava2:${roomVersion}",
            archExtensions:      "androidx.lifecycle:lifecycle-extensions:${roomVersion}",
            ankoCommons:         "org.jetbrains.anko:anko-commons:${ankoVersion}",
            rxBindingAppCompat:  "com.jakewharton.rxbinding2:rxbinding-appcompat-v7-kotlin:${rxBindingVersion}",
            flipper:             "com.facebook.flipper:flipper:${flipperVersion}",
            leakcanaryDebug:     "com.squareup.leakcanary:leakcanary-android:${leakcanaryVersion}",
            leakcanaryRelease:   "com.squareup.leakcanary:leakcanary-android-no-op:${leakcanaryVersion}",
            arrowCore:           "io.arrow-kt:arrow-core:$arrowVersion",
            arrowSyntax:         "io.arrow-kt:arrow-syntax:$arrowVersion",
            arrowTypeClasses:    "io.arrow-kt:arrow-typeclasses:$arrowVersion",
            arrowData:           "io.arrow-kt:arrow-data:$arrowVersion",
            arrowInstancesCore:  "io.arrow-kt:arrow-instances-core:$arrowVersion",
            arrowInstancesData:  "io.arrow-kt:arrow-instances-data:$arrowVersion",
            arrowProcessor:      "io.arrow-kt:arrow-annotations-processor:$arrowVersion"
    ]

    mobileUiTestDependencies = [
            koinTest:            "org.koin:koin-test:${koinVersion}",
            junit:               "junit:junit:${jUnitVersion}",
            kotlinJUnit:         "org.jetbrains.kotlin:kotlin-test-junit:${kotlin_version}",
            assertj:             "org.assertj:assertj-core:${assertJVersion}",
            mockito:             "com.nhaarman:mockito-kotlin:${mockitoKotlinVersion}",
            mockitoAndroid:      "org.mockito:mockito-android:${mockitoAndroidVersion}",
            archTesting:         "androidx.arch.core:core-testing:${roomVersion}",
            espressoCore:        "androidx.test.espresso:espresso-core:${espressoVersion}",
            espressoIntents:     "androidx.test.espresso:espresso-intents:${espressoVersion}",
            espressoContrib:     "androidx.test.espresso:espresso-contrib:${espressoVersion}",
            androidRunner:       "androidx.test:runner:${runnerVersion}",
            androidRules:        "androidx.test:rules:${runnerVersion}"
    ]
}
